apiVersion : apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-django-backend
  labels:
    app    : {{ .Values.application}}
    tier   : backend
    owner  : {{ .Values.owner }}
    project: {{ .Values.project }}
spec:
  selector:
    matchLabels:
      project: {{ .Values.project }}-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        project: {{ .Values.project }}-backend
    spec:
      containers:
        - name : django-backend
          image: {{ .Values.backend.container.image }}
          ports:
            - containerPort: {{ .Values.backend.port }}
          env:
          - name: SECRET_KEY
            value: 'django-insecure-t)8$9v*ampc4h0$2r&ax_zr2b88emo6wm80d^%d_t7sgz5+f9+'
          - name: DJANGO_ALLOWED_HOSTS
            value: "*"
          - name: DEBUG
            value: "1"
          - name: BACKEND_PORT
            value: "{{ .Values.backend.port }}"
          - name: DB_ENGINE
            value: "{{ .Values.database.engine }}"
          - name: DB_NAME
            value: "{{ .Values.database.name }}"
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: db-secrets
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secrets
                key: password
          - name: DB_HOST
            value: "{{ .Values.database.host }}"
          - name: DB_PORT
            value: "{{ .Values.database.port }}"
          - name: SOFTWARE_VERSION
            value: "1.0"

          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.backend.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.backend.port }}
            periodSeconds: 5
